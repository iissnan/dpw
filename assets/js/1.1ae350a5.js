(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{53:function(t,s,a){"use strict";a.r(s);var n=a(0),r=Object(n.a)({},function(){this.$createElement;this._self._c;return this._m(0)},[function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("div",{staticClass:"content"},[a("h2",{attrs:{id:"motivation"}},[t._v("动机")]),a("p",[t._v("随着项目的开发，项目的文件也越来越多，DPW现在使用的 Grunt 开发方案反应越来越迟钝。DPW  的前端构建包含两个阶段，第一个阶段是将站点间共享的内容与站点所属的内容合并到 Stage 目录；第二阶段在 Stage 目录将进行构建并生成最终部署文件到服务器目录下。两个阶段皆需要 Watcher: 第一阶段的源码变动将会触发一次复制到 Stage 目录，而第二阶段定变动将会再次执行构建。")]),a("p",[t._v("这个构建过程的主要问题体现在以下两个方面：")]),a("ul",[a("li",[t._v("第一阶段的复制合并需要的时间随着项目的扩大越来越长")]),a("li",[t._v("文件越来越多导致 Watcher 的负担越重，第一阶段源码文件的一次改动将会致使第二阶段的 Watcher 重新扫描上千个的文件")])]),a("h2",{attrs:{id:"research"}},[t._v("方案调研")]),a("p",[t._v("Gulp 使用虚拟文件（Vinyl Objects）结合 Stream 来减少磁盘的 IO，这在一定程度上可以提升构建的速度，但并没有带来太大的收益，因此使用 Gulp 替代 Grunt 并没有真正的解决问题。")]),a("p",[t._v("使用 Webpack 的 Dev Server 来做 Proxy，通过 Middlewares 处理各个阶段特定的任务是一个更好的方案。但迁移到 Angular2 后将使用 Webpack 来做构建，迁移到过程可能会持续一段时间，在这段时间内，原先的部署方式会保留使用，这也就意味着可能需要两个 Webpack Dev Server。另一方面，基于 Grunt 的使用经验来看，过度依赖一个工具将致使迁移成本很高。比如说，若现有的 Grunt 任务中文件的处理采用 NodeJS 来处理而非依赖于 Grunt 提供的 API 去处理，那么迁移到 Gulp 的过程将会顺利很多。")]),a("p",[t._v("综合上述调研结果排除掉了 Gulp 和 Webpack，那么新的开发工具需要具备以下特性：")]),a("ul",[a("li",[t._v("工具无关性。将所有文件处理交有 NodeJS 处理，工具将仅根据需要调用这些处理过程")]),a("li",[t._v("去除复制到 Stage 的步骤")]),a("li",[t._v("去除所有的 Watcher")]),a("li",[t._v("易于扩展。例如支持 Wepack")])]),a("h2",{attrs:{id:"servus"}},[t._v("Servus")]),a("p",[t._v("Servus 是一个独立的 Application Server，提供静态文件服务和反向代理后端请求，类似于 Nginx 静态文件服务器。她由一个基于 "),a("a",{attrs:{href:"http://hapijs.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Hapi")]),t._v(" 框架编写的 Server 和 若干预处理器 组成。Server 通过路由配置，指定请求如何被处理。举个例子，当请求静态脚本文件 "),a("code",[t._v("asserts/js/login.js")]),t._v(" 时，匹配的路由 "),a("code",[t._v("assets/js/{name*}")]),t._v(" 所对应的处理器会在项目下查找此文件。这种映射请求到磁盘文件的方式，就无需复制文件到 Stage 目录；同时每一次请求都是直接读取磁盘文件，因此Watcher 也不再需要。")]),a("p",[t._v("查找匹配文件的过程速度非常之快（通常在 20ms 以下），因此相对于之前的开发方式， Servus 在速度上有着质的提升。之前的开发方式需要几分钟的启动过程，Servus 仅需五秒以内（Sass 的预处理花费了接近两秒）即可完成；同时在开发过程了，因请求是直接映射磁盘文件也就避免了 Wacher 的诸多问题（例如修改没有被 Watch 到）。")]),a("p",[t._v("Proxy 部分（主要是 "),a("code",[t._v("/api/*")]),t._v("）使用了穿透模式，也就是客户端的请求和服务器的响应都原封不动直接传递。")]),a("h2",{attrs:{id:"usage"}},[t._v("如何使用")]),a("h3",{attrs:{id:"setup"}},[t._v("安装")]),a("p",[t._v("Servus 目前放置在一个独立的 Git 仓库中，因此首先第一步通过 "),a("code",[t._v("git clone")]),t._v(" 下载代码，下载完成后使用 "),a("code",[t._v("npm install")]),t._v(" 来安装依赖。命令如下：")]),a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("cd c:\\hgdins\ngit clone ${repostiry-url}\ncd servus\nnpm install\n")])]),a("h3",{attrs:{id:"configurations"}},[t._v("配置")]),a("p",[t._v("使用 Servus 之前，需要做少量的配置。Servus 的默认配置放置在 "),a("code",[t._v("config")]),t._v(" 目录下，文件为 "),a("code",[t._v("servus.config.json")]),t._v("，其内容如下：")]),a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"portal_path"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"c:/path/to/portal-web"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"sass_mode"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"watch"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"connections"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("[")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"active"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"host"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"0.0.0.0"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"port"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("9000")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"site"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"developer"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"backend"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v('"protocol"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"http"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v('"host"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v('"port"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("8080")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"active"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"host"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"0.0.0.0"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"port"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("9009")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"site"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"admin"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n      "),a("span",{attrs:{class:"token property"}},[t._v('"backend"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v('"protocol"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"http"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v('"host"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token string"}},[t._v('"127.0.0.1"')]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n        "),a("span",{attrs:{class:"token property"}},[t._v('"port"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token number"}},[t._v("8088")]),t._v("\n      "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{attrs:{class:"token property"}},[t._v('"backend"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"passThrough"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"xforward"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("true")]),a("span",{attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{attrs:{class:"token property"}},[t._v('"redirects"')]),a("span",{attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n  "),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),a("p",[t._v("由于个人的 Portal Web 的项目放置位置不同，因此自定义些许配置。自定义配置需要在 Servus 项目根目录下新建一个 "),a("code",[t._v("servus.config.json")]),t._v(" 文件（此文件为 Git 所忽略），根据需要更改默认的配置即可。其中大部分的配置不需要做修改，这些选项的说明如下：")]),a("table",[a("thead",[a("tr",[a("th",[t._v("option")]),a("th",[t._v("description")])])]),a("tbody",[a("tr",[a("td",[t._v("portal_path")]),a("td",[t._v("The path to DPW project")])]),a("tr",[a("td",[t._v("sass_mode")]),a("td",[t._v("Compass command, available values: "),a("code",[t._v("watch")]),t._v(", "),a("code",[t._v("compile")])])]),a("tr",[a("td",[t._v("connections")]),a("td",[t._v("Connection to listen on")])]),a("tr",[a("td",[t._v("connections.active")]),a("td",[t._v("Active this connection or not")])]),a("tr",[a("td",[t._v("connections.host")]),a("td",[t._v("connection address")])]),a("tr",[a("td",[t._v("connections.port")]),a("td",[t._v("connection port to listen on")])]),a("tr",[a("td",[t._v("connections.site")]),a("td",[t._v("To detemine what site the connection belong to")])]),a("tr",[a("td",[t._v("connections.backend")]),a("td",[t._v("Backend information")])]),a("tr",[a("td",[t._v("backend.protocol")]),a("td",[t._v("Backend server protocol")])]),a("tr",[a("td",[t._v("backend.host")]),a("td",[t._v("Backend server address")])]),a("tr",[a("td",[t._v("backend.port")]),a("td",[t._v("Backend server port. It will automatically switch to 8088 for admin site")])]),a("tr",[a("td",[t._v("backend.passThrough")]),a("td",[t._v("If headers from client and backend will exchange directly")])]),a("tr",[a("td",[t._v("backend.xforward")]),a("td",[t._v("If send 'X-Forwarded-*' to backend from servus")])])])]),a("h3",{attrs:{id:"running"}},[t._v("运行")]),a("p",[t._v("当配置完成后，使用 "),a("code",[t._v("npm start")]),t._v(" 或者  "),a("code",[t._v("node .")]),t._v(" 命令来启动 Servus 即可。")])])}],!1,null,null,null);s.default=r.exports}}]);